@model FlightJobs.Models.JobSerachModel
@using FlightJobs.Util;

@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<style>
    .uppercase {
        text-transform: uppercase;
    }
    .swap {
        cursor: pointer;
        color: #5bc0de;
    }
    .popover {
        max-width: 100%; /* Max Width of the popover (depending on the container!) */
    }
</style>
@using (Html.BeginForm("Index", "SearchJobs", FormMethod.Post, new { id = "searchForm" }))
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal" role="form">
        <br />
        <h4>Choose the parameters for generate jobs</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div id="swap-button" class="swap">Swap departure and destination</div>
        
        <div class="form-group">
            <div class="row">
                <div class="col-md-2" style="padding-right:0px; width:12%;">
                    @Html.LabelFor(model => model.Departure, htmlAttributes: new { @class = "control-label" })
                    @Html.EditorFor(model => model.Departure, new { htmlAttributes = new { placeholder = "ICAO", @class = "form-control uppercase", @maxlength = "4" } })
                    @Html.ValidationMessageFor(model => model.Departure, "", new { @class = "text-danger" })
                </div>
                <div class="col-sm-1" style="padding-left:0px; padding-right:0px; width:auto;">
                    <br />
                    <img src="~/Content/img/airplane.png" />

                </div>

                <div class="col-md-2" style="padding-left:0px; width:12%;">
                    @Html.LabelFor(model => model.Arrival, htmlAttributes: new { @class = "control-label" })
                    @Html.EditorFor(model => model.Arrival, new { htmlAttributes = new { placeholder = "ICAO", @class = "form-control uppercase", @maxlength = "4" } })
                    @Html.ValidationMessageFor(model => model.Arrival, "", new { @class = "text-danger" })
                </div>
                <div class="col-xs-1" style="padding:0px; width:auto;">
                    <input id="arrival-tips-button" type="button" value="Tips" class="btn btn-info btn-xs" style="margin-top:26px" />
                </div>
                
                <div id="departure-required" style="display: none;"><i class="glyphicon glyphicon-alert"></i>  First set a valid departure.</div>
                <div id="arrival-tips-table" style="display: none;" class="col-md-6">Loading...</div>
            </div>
            <div class="row">
                <div class="col-md-4 text-center" style="padding-left:0px"> 
                    <label id="Distance" style="font-size:small;" ></label>
                </div>
            </div>


            <div class="row">
                <div class="col-md-2" style="width:12%;">
                    @Html.LabelFor(model => model.Alternative, htmlAttributes: new { @class = "control-label" })
                    @Html.EditorFor(model => model.Alternative, new { htmlAttributes = new { placeholder = "ICAO", @class = "form-control uppercase", @maxlength = "4" } })
                    @Html.ValidationMessageFor(model => model.Alternative, "", new { @class = "text-danger" })
                </div>

                <div class="col-xs-1" style="padding:0px; width:auto;">
                    <input id="alternative-tips-button" type="button" value="Tips" class="btn btn-info btn-xs" style="margin-top:26px" />
                </div>
                <div id="destination-required" style="display: none;"><i class="glyphicon glyphicon-alert"></i> First set a valid destination.</div>
                <div id="alternative-tips-table" style="display: none;" class="col-md-6">Loading...</div>

            </div>

        </div>
        <br />

        <div class="form-group">
            <hr />
            <input type="submit" value="Generate" class="btn btn-info  pull-right" />
            <div class="funkyradio">
                <div class="row">
                    <div class="col-xs-2 ">
                        <div class="funkyradio-info">
                            <input type="radio" name="AviationType" id="GeneralAviation" value="GeneralAviation" />
                            <label for="GeneralAviation"><img src="~/Content/img/pictures/general-aviation.jpg" style="width:100px; height:70px;" /><span>General aviation</span></label>
                        </div>
                    </div>
                    <div class="col-xs-2 ">
                        <div class="funkyradio-info">
                            <input type="radio" name="AviationType" id="AirTransport" value="AirTransport" checked="checked" />
                            <label for="AirTransport"><img src="~/Content/img/pictures/air-transport.jpg" style="width:100px; height:70px;" /><span>Air transport</span></label>
                        </div>
                    </div>
                    <div class="col-xs-2 ">
                        <div class="funkyradio-info">
                            <input type="radio" name="AviationType" id="HeavyAirTransport" value="HeavyAirTransport" />
                            <label for="HeavyAirTransport"><img src="~/Content/img/pictures/heavy.jpg" style="width:100px; height:70px;" /><span>Heavy</span></label>
                        </div>
                    </div>
                    <div class="col-xs-2 ">
                        <div class="funkyradio-info">
                            <input type="radio" name="AviationType" id="Cargo" value="Cargo" />
                            <label for="Cargo"><img src="~/Content/img/pictures/cargo.jpg" style="width:100px; height:70px;" /><span>Cargo</span></label>
                        </div>
                    </div>
                    
                </div>
                <hr />
                <div class="row">
                    <div style="width:300px;margin-left: 15px;">
                        <div class="funkyradio-info">
                            <div class="row">
                                <div class="col-lg-8">
                                    @Html.CheckBoxFor(model => model.UseCustomPlaneCapacity)
                                    <label for="UseCustomPlaneCapacity" style="text-align:center;">
                                        <img src="~/Content/img/capacity001.jpg" style="width:120px; height:80px; " />
                                        <span>Custom capacity</span>
                                    </label>
                                </div>
                                <div class="col-lg-2" style="margin-top:30px">
                                    <input id="ChangeCapacity" type="button" value="Change" class="btn btn-info"/>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Modal -->
    <div class="modal fade" id="myModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel">
        <div class="modal-dialog" role="document">
            <div class="modal-content" style="width: 390px;">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                    <h4 class="modal-title" id="myModalLabel">Custom capacity</h4>
                </div>

                <div class="modal-body">
                    <h5 style="color:gray">* This information will be used to calculate the Job Profit.</h5>
                    <div class="form-group">
                        @if (Model.CustomPlaneCapacityList == null)
                        {
                            Model.CustomPlaneCapacityList = new List<SelectListItem>();                            
                        }
                        @if (Model.CustomPlaneCapacity == null)
                        {
                            Model.CustomPlaneCapacity = new FlightJobs.Models.CustomPlaneCapacityDbModel()
                            {
                                CustomCargoCapacityWeight = 1500, CustomNameCapacity = "B738", CustomPassengerCapacity = 5
                            };
                        }
                        
                        @Html.Partial("CapacityListView", Model)
                        <hr />
                        <div class="row">
                            <div class="col-md-9">
                                <label class="control-label" for="CustomPassengerCapacity">Passenger capacity</label>
                                @Html.EditorFor(model => model.CustomPlaneCapacity.CustomPassengerCapacity, new { htmlAttributes = new { @class = "form-control"} })
                            </div>
                        </div>
                        <br />
                        <div class="row">
                            <div class="col-md-9">
                                <label class="control-label" for="CustomCargoCapacityWeight">Cargo capacity weight @if (DataConversion.GetWeightUnit(Request) == DataConversion.UnitPounds) { <span> (lbs)</span>; } else { <span> (Kg)</span>; } </label>
                                @Html.EditorFor(model => model.CustomPlaneCapacity.CustomCargoCapacityWeight, new { htmlAttributes = new { @class = "form-control" } })
                            </div>
                        </div>
                        <br />
                        <div class="row">
                            <div class="col-md-9">
                                <label class="control-label" for="CustomNameCapacity">Capacity Name (Change to add)</label>
                                @Html.EditorFor(model => model.CustomPlaneCapacity.CustomNameCapacity, new { htmlAttributes = new { @class = "form-control" } })
                            </div>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-default" data-dismiss="modal">Cancel</button>
                    <button type="button" class="btn btn-info" id="SaveCustomCapacity">Save</button>
                </div>
            </div>
        </div>
    </div>
}



<script>
    $('[data-toggle="popover"]').popover({
        container: 'body'
    });
    $("#ChangeCapacity").click(function () {
        $('#myModal').modal('show');
        $('#UseCustomPlaneCapacity').prop("checked", 1)
    });

    $('#UseCustomPlaneCapacity').change(function () {
        if ($('#UseCustomPlaneCapacity').prop("checked")) {
            $("#ChangeCapacity").prop('disabled', false);
        } else {
             $.ajax({
                url: '@Url.Action("UnSetCustonCapacity", "SearchJobs")',
                type: "Get",
                success: function (result) {}
            });
             $("#ChangeCapacity").prop('disabled', true);
        }
    });

    //$('#searchForm').submit(function () {
    //    if ($('#GeneralAviation').prop("checked")) {
    //        $('#myModal').modal('show');
    //        return $('#myModal').is(':visible');
    //    }
    //    else {
    //        $('#searchForm').submit();
    //    }
    //});

    $('#CustomPassengerCapacity').change(function () {
        var passengersVal = $('#CustomPassengerCapacity').val();
        if (parseInt(passengersVal) > 600) {
            $('#CustomPassengerCapacity').val(600);
        }
    });

    $('#CustomCargoCapacityWeight').change(function () {
        var cargoVal = $('#CustomCargoCapacityWeight').val();
        if (parseInt(cargoVal) > 190000) {
            $('#CustomCargoCapacityWeight').val(190000);
        }
    });

    $('#SaveCustomCapacity').click(function () {
        //$('#searchForm').submit();
        var passengersVal = $('#CustomPlaneCapacity_CustomPassengerCapacity').val();
        var cargoVal = $('#CustomPlaneCapacity_CustomCargoCapacityWeight').val();
        var nameVal = $('#CustomPlaneCapacity_CustomNameCapacity').val();

        $.ajax({
            url: '@Url.Action("AddCustonCapacity", "SearchJobs")',
            type: "Get",
            data: { passengers: passengersVal, cargo: cargoVal, name: nameVal },
            success: function (result) {
                $('#myModal').modal('hide');
                $('#CapacityListContent').html(result);
            }
        });
    });

    $('#swap-button').click(function () {
        var dep = $('#Departure').val();
        var arr = $('#Arrival').val();
        $('#Departure').val(arr);
        $('#Arrival').val(dep);

    });

    $('#alternative-tips-button').click(function () {
        $("#arrival-tips-table").hide();
        $("#alternative-tips-table").toggle(500);
        $.ajax({
            url: '@Url.Action("AlternativeTips", "SearchJobs")',
            type: "Get",
            data: { destination: $('#Arrival').val(), range: 40 },
            success: function (result) {
                if (result != null && result != '') {
                    $("#destination-required").hide();
                    $("#alternative-tips-table").html(result);
                }
                else {
                    $("#destination-required").show().delay(3000).fadeOut();
                    $("#alternative-tips-table").hide();
                    $("#Arrival").focus();
                }
            }
        });
        return false;

    });

    $('#arrival-tips-button').click(function () {
        $("#alternative-tips-table").hide();
        $("#arrival-tips-table").toggle(500);
        $.ajax({
            url: '@Url.Action("ArrivalTips", "SearchJobs")',
            type: "Get",
            data: { departure: $('#Departure').val() },
            success: function (result) {
                if (result != null && result != '') {
                    $("#departure-required").hide();
                    $("#arrival-tips-table").html(result);
                }
                else {
                    $("#departure-required").show().delay(3000).fadeOut();
                    $("#arrival-tips-table").hide();
                    $("#Departure").focus();
                }
            }
        });
        return false;

    });


    $('#Arrival').change(function () {
        if ($('#Departure').val().length == 4 && $('#Arrival').val().length == 4) {
            CalcDistance();
        }
    });

    $('#Arrival').keyup(function () {

        if ($('#Departure').val().length == 4 && $('#Arrival').val().length == 4) {
            CalcDistance();
        }
    });

    $('#Departure').keyup(function () {

        if ($('#Departure').val().length == 4 && $('#Arrival').val().length == 4) {
            CalcDistance();
        }
    });

    function CalcDistance() {
        $.ajax({
            url: '@Url.Action("CalcDistance", "SearchJobs")',
            type: "Get",
            data: { departure: $('#Departure').val(), arrival: $('#Arrival').val() },
            success: function (result) {
                if (result != null && result != '') {
                    $('#Distance').html(result + ' NM');
                }
            }
        });
    }

</script>