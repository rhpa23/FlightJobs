@using PagedList;
@using PagedList.Mvc;

@model FlightJobs.Models.HomeViewModel

@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


<style>
    .pagination {
        margin: 0px;
    }
</style>
<div class="row" style="margin:0px 35px 5px 35px;">
    <hr />
    <div style="background-color:dimgray; text-align:center; height:40px; padding-top:5px; border-radius: 5px;">
        <b><span style="color:darkgray">P I L O T</span><samp style="color:lightgray">    L O G B O O K</samp></b>
    </div>

    <div class="panel panel-default text-center">
        <table class="table table-striped table-bordered table-hover" style="font-size: 10px; padding:0px">
            <tr>
                <th>
                    @Html.ActionLink("Date", "Index", new { sortOrder = "Date", CurrentSort = ViewBag.CurrentSort })
                </th>
                <th>
                    @Html.ActionLink("Departure/Time", "Index", new { sortOrder = "DepartureICAO", CurrentSort = ViewBag.CurrentSort })
                </th>
                <th>
                    @Html.ActionLink("Arrival/Time", "Index", new { sortOrder = "ArrivalICAO", CurrentSort = ViewBag.CurrentSort })
                </th>
                <th>
                    @Html.ActionLink("Model/Registration", "Index", new { sortOrder = "Model", CurrentSort = ViewBag.CurrentSort })
                </th>
                <th>
                    @Html.ActionLink("Distance", "Index", new { sortOrder = "Distance", CurrentSort = ViewBag.CurrentSort })
                </th>
                <th>
                    @Html.ActionLink("Pax", "Index", new { sortOrder = "Pax", CurrentSort = ViewBag.CurrentSort })
                </th>
                <th>
                    @Html.ActionLink("Cargo", "Index", new { sortOrder = "Cargo", CurrentSort = ViewBag.CurrentSort })
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Jobs.First().Payload)
                </th>
                <th>
                    @Html.ActionLink("Pay", "Index", new { sortOrder = "Pay", CurrentSort = ViewBag.CurrentSort })
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Jobs.First().FlightTime)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Jobs.First().UsedFuelWeight)
                </th>
                <th></th>
                <th></th>
            </tr>

            @foreach (var item in Model.Jobs)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.EndTime)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.DepartureICAO)
                        @item.StartTime.ToString("(HH:mm)")
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.ArrivalICAO)
                        @item.EndTime.ToString("(HH:mm)")
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.ModelDescription) -
                        @Html.DisplayFor(modelItem => item.ModelName)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Dist) nm
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Pax)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Cargo) @Model.WeightUnit
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.PayloadDisplay) @Model.WeightUnit
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Pay)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.FlightTime)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.UsedFuelWeightDisplay) @Model.WeightUnit
                    </td>
                    <td style="text-align:center;"><a class="show-video-button" data-id="@item.Id"><i class="glyphicon glyphicon-film"></i></a></td>
                    <td style="text-align:center;"><a data-toggle="confirmation" data-title="Remove Job?" href="Profile/Delete/@item.Id"><i class="glyphicon glyphicon-remove"></i></a></td>
                </tr>
            }

        </table>
    </div>

    <button type="button" class="btn btn btn-info pull-right" data-toggle="modal" data-target="#myModal">
        <span class="glyphicon glyphicon-search"></span> Filter
    </button>

    @if (Session["ProfileFilterModel"] != null)
    {
        <button type="button" class="btn btn btn-default pull-right" style="margin-right:20px" title="Remove Filter" onclick="location.href='@Url.Action("RemoveFilter")'">
            <span class="glyphicon glyphicon-remove"></span>
        </button>
    }

    @Html.PagedListPager(Model.Jobs, pageNumber => Url.Action("Index", new { pageNumber }))
</div>

<!-- Modal -->
<div class="modal fade" id="myModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel">
    <div class="modal-dialog" role="document">
        <div class="modal-content" style="width: 50%;">
            @using (Html.BeginForm("SearchProfile", "Profile", FormMethod.Post))
            {
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                    <h4 class="modal-title" id="myModalLabel">Profile filter</h4>
                </div>

                <div class="modal-body" style="height:170px">
                    <div class="form-group">
                        <div class="row">
                            <div class="col-md-6">
                                @Html.LabelFor(model => model.DepartureFilter, htmlAttributes: new { @class = "control-label" })
                                @Html.EditorFor(model => model.DepartureFilter, new { htmlAttributes = new { @class = "form-control uppercase", @maxlength = "4" } })
                                @Html.ValidationMessageFor(model => model.DepartureFilter, "", new { @class = "text-danger" })
                            </div>

                            <div class="col-md-6">
                                @Html.LabelFor(model => model.ArrivalFilter, htmlAttributes: new { @class = "control-label" })
                                @Html.EditorFor(model => model.ArrivalFilter, new { htmlAttributes = new { @class = "form-control uppercase", @maxlength = "4" } })
                                @Html.ValidationMessageFor(model => model.ArrivalFilter, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <br />
                        <div class="row">
                            <div class="col-md-12">
                                @Html.LabelFor(model => model.ModelDescriptionFilter, htmlAttributes: new { @class = "control-label" })
                                @Html.EditorFor(model => model.ModelDescriptionFilter, new { htmlAttributes = new { @class = "form-control uppercase", @maxlength = "20" } })
                                @Html.ValidationMessageFor(model => model.ModelDescriptionFilter, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                </div>

                <div class="modal-footer">
                    <span class="pull-left">@Html.ActionLink("Remove filter", "RemoveFilter")</span>
                    <button type="button" class="btn btn-default" data-dismiss="modal">Cancel</button>
                    <button type="submit" class="btn btn btn-info" value="SearchProfile">Apply</button>
                </div>
            }
        </div>
    </div>
</div>

<div class="modal" id="myModalVideo" tabindex="-1" role="dialog" aria-labelledby="myModalLabel">
    <div class="modal-dialog" role="document" style="width:auto; height:auto; margin:150px;">
        <div class="modal-content">
            <div class="modal-header" style="padding-bottom:0px;">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>

                <h2 class="modal-title">
                    Job vídeo
                </h2>
            </div>
            <div class="modal-body" height:auto;">
                <div id="video-content"></div>
            </div>
        </div>
    </div>
</div>


<script>
$('.show-video-button').click(function (e) {
    e.preventDefault();
    var model = {
        jobId: $(this).data("id")
    }

    $.ajax({
        url: '@Url.Action("JobVideo", "Profile")',
        type: "Get",
        data: model,
        success: function (result) {
            if (result != null) {
                $('#myModalVideo').modal('show');
                $("#video-content").html(result);
            }
        }
    });
    return true;
});




$(function () {
    $('[data-toggle="tooltip"]').tooltip()
});



</script>
@section Scripts{
    <script type="text/javascript" src="/Scripts/jquery.unobtrusive-ajax.js"></script>
}