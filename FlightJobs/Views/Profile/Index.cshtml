@using PagedList;
@using PagedList.Mvc;

@model FlightJobs.Models.HomeViewModel

@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<link href="/Content/bootstrap-fileinput/css/fileinput.min.css" rel="stylesheet">
<style>

    .myList {
        font-size: small;
        padding: 10px 0px 0px 0px;
        list-style-type: none;
    }

        .myList li {
            margin: 10px 0;
        }

    .pagination {
        margin: 0px;
    }

    div.card {
        box-shadow: 0 4px 8px 2px rgba(0, 0, 0, 0.2), 0 6px 20px 2px rgba(0, 0, 0, 0.19);
        padding-top: 15px;
        padding-bottom: 15px;
    }
    .popover {
        width: 500px;
    }
</style>

<hr />
<div class="panel panel-default text-center" style="margin-bottom:5px">
    <p><b>PILOT LOGBOOK</b></p>
    <table class="table table-striped table-bordered table-hover" style="font-size: 10px; padding:0px">
        <tr>
            <th>
                @Html.ActionLink("Date", "Index", new { sortOrder = "Date", CurrentSort = ViewBag.CurrentSort })
            </th>
            <th>
                @Html.ActionLink("Departure/Time", "Index", new { sortOrder = "DepartureICAO", CurrentSort = ViewBag.CurrentSort })
            </th>
            <th>
                @Html.ActionLink("Arrival/Time", "Index", new { sortOrder = "ArrivalICAO", CurrentSort = ViewBag.CurrentSort })
            </th>
            <th>
                @Html.ActionLink("Model/Registration", "Index", new { sortOrder = "Model", CurrentSort = ViewBag.CurrentSort })
            </th>
            <th>
                @Html.ActionLink("Distance", "Index", new { sortOrder = "Distance", CurrentSort = ViewBag.CurrentSort })
            </th>
            <th>
                @Html.ActionLink("Pax", "Index", new { sortOrder = "Pax", CurrentSort = ViewBag.CurrentSort })
            </th>
            <th>
                @Html.ActionLink("Cargo", "Index", new { sortOrder = "Cargo", CurrentSort = ViewBag.CurrentSort })
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Jobs.First().Payload)
            </th>
            <th>
                @Html.ActionLink("Pay", "Index", new { sortOrder = "Pay", CurrentSort = ViewBag.CurrentSort })
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Jobs.First().FlightTime)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Jobs.First().UsedFuelWeight)
            </th>
            <th></th>
        </tr>

        @foreach (var item in Model.Jobs)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.EndTime)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.DepartureICAO)
                    @item.StartTime.ToString("(HH:mm)")
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ArrivalICAO)
                    @item.EndTime.ToString("(HH:mm)")
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ModelDescription) -
                    @Html.DisplayFor(modelItem => item.ModelName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Dist) nm
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Pax)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Cargo) Kg
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Payload) Kg
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Pay)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.FlightTime)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.UsedFuelWeight)
                </td>
                <td style="text-align:center;"><a data-toggle="confirmation" data-title="Remove Job?" href="Profile/Delete/@item.Id"><i class="glyphicon glyphicon-remove"></i></a></td>
            </tr>
        }

    </table>
</div>

<button type="button" class="btn btn btn-info pull-right" data-toggle="modal" data-target="#myModal">
    <span class="glyphicon glyphicon-search"></span> Filter
</button>

@if (Session["ProfileFilterModel"] != null)
{
    <button type="button" class="btn btn btn-default pull-right" style="margin-right:20px" title="Remove Filter" onclick="location.href='@Url.Action("RemoveFilter")'">
        <span class="glyphicon glyphicon-remove"></span>
    </button>
}

@Html.PagedListPager(Model.Jobs, pageNumber => Url.Action("Index", new { pageNumber }))

<hr />
@if (Model.Statistics != null)
{
    <div class="row">
        <div class="card col-md-12">
            <div class="col-sm-3 text-center">
                <div class="col-sm-4 ">
                    @using (Html.BeginForm("Upload", "Profile", FormMethod.Post, new { enctype = "multipart/form-data" }))
                    {
                        <div class="kv-avatar">
                            <div class="file-loading">
                                <input id="avatar-1" name="FilesInput" type="file" required>

                            </div>
                        </div>

                        <div id="kv-avatar-errors-1" class="center-block" style="font-size:8pt; width:400px;display:none"></div>
                    }
                </div>
            </div>

            <div class="col-sm-4 text-left">
                <div class="pull-right text-center img-thumbnail" style="margin-right:  20px;width:  130px; border: 1px dashed lightgray;" >
                        <img src="@Model.Statistics.GraduationPath" data-html="True" 
                       data-toggle="popover" title="Pilot graduation"
                       data-trigger="hover" data-placement="top"
                       data-content="@Html.Partial("GraduationView")" />

                    <div style="font-size: 10px; margin-top:9px;">@Model.Statistics.GraduationDesc</div>
                </div>
                <h4><strong>Pilot statistics</strong></h4>
                <ul class="myList">
                    <li>
                        <b>@Html.DisplayNameFor(model => model.Statistics.FlightTimeTotal):</b> @Html.DisplayFor(model => model.Statistics.FlightTimeTotal)
                    </li>
                    <li>
                        <b>@Html.DisplayNameFor(model => model.Statistics.NumberFlights):</b> @Html.DisplayFor(model => model.Statistics.NumberFlights)
                    </li>
                    <li>
                        <b>@Html.DisplayNameFor(model => model.Statistics.PayloadTotal):</b> @Html.DisplayFor(model => model.Statistics.PayloadTotal) Kg
                    </li>
                    <li>
                        <b>@Html.DisplayNameFor(model => model.Statistics.LastFlight):</b> @Html.DisplayFor(model => model.Statistics.LastFlight)
                    </li>
                    <li>
                        <b>@Html.DisplayNameFor(model => model.Statistics.LastAircraft):</b> @Html.DisplayFor(model => model.Statistics.LastAircraft)
                    </li>
                    <li>
                        <b>@Html.DisplayNameFor(model => model.Statistics.FavoriteAirplane):</b> @Html.DisplayFor(model => model.Statistics.FavoriteAirplane)
                    </li>
                    <li>
                        <button id="buttonChart" type="button" class="btn btn btn-info">
                            <span class="glyphicon glyphicon-random"></span> Chart
                        </button>
                    </li>
                </ul>
            </div>
            <div class="col-sm-5 text-left">
                <h4><strong>Airline statistics</strong></h4>
                <ul class="myList">
                    @if (Model.Statistics.Airline != null)
                    {
                        <li><b>@Html.DisplayNameFor(model => model.Statistics.Airline):</b> @Html.DisplayFor(model => model.Statistics.Airline.Name)</li>
                        <li><img class="pull-right" src="@Model.Statistics.Airline.Logo" style="width:110px; height:110px; margin-top:-60px; margin-right:10px" /></li>

                        <li><b>@Html.DisplayNameFor(model => model.Statistics.AirlinePilotsHired):</b> @Html.DisplayFor(model => model.Statistics.AirlinePilotsHired)</li>
                        <li><b>@Html.DisplayNameFor(model => model.Statistics.Airline.AirlineScore):</b> @Html.DisplayFor(model => model.Statistics.Airline.AirlineScore)</li>
                        <li><b>@Html.DisplayNameFor(model => model.Statistics.Airline.BankBalance):</b> @Html.DisplayFor(model => model.Statistics.Airline.BankBalance)</li>
                        <li>
                            <button id="buttonRanking" type="button" class="btn btn btn-info">
                                <span class="glyphicon glyphicon-equalizer"></span> Ranking
                            </button>
                        </li>
                    }
                    else
                    {
                        <li><b>@Html.DisplayNameFor(model => model.Statistics.Airline):</b> Unemployed</li>
                        <li>Try to sign contract with an Airline.</li>
                    }
                </ul>
                @if (Model.Statistics.Airline != null && Model.Statistics.Airline.DebtValue > 0)
                {
                    <div class="pull-right" style="background-color:azure; padding:7px;">
                        @if (Model.Statistics.Airline.DebtMaturityDate < DateTime.Now)
                        {
                            <div class="row">
                                <div class="col-md-1"><img src="~/Content/img/Alert001.gif" style="width:30px; height:30px;" /></div>
                                <div class="col-md-11"> <h4 style="color:tomato; margin-left:5px;">This airline has overdue bills to pay. </h4></div>
                            </div>
                        }
                        else
                        {
                            <div class="row">
                                <div class="col-md-1"><img src="~/Content/img/barcode.png" style="width:30px; height:30px;" /></div>
                                <div class="col-md-11"><h4 style="color:tomato; margin-left:5px;">This airline has bills to pay. </h4></div>
                            </div>
                        }
                        <h6>Fees, taxes and charges are generated with the Jobs. If you are the owner, pay your bills before the due date.</h6>
                        <h6>Otherwise, this airline will not score, and the Jobs will generate more debts which could lead to the bankruptcy of the company.</h6>
                        @if (Model.Statistics.Airline.AlowEdit)
                        {
                            <input id="pay-debts-button" type="button" value="Pay" onclick="location.href='@Url.Action("PayDebt", "Profile", new { id = Model.Statistics.Airline.Id } )'" class="btn btn-danger pull-right btn-sm" style="margin-top:5px" />
                        }  
                        <ul style="color:tomato;">
                            <li><strong>Debt value: </strong> @string.Format("{0:C}", Model.Statistics.Airline.DebtValue)</li>
                            <li><strong>Debt maturity date: </strong> @Model.Statistics.Airline.DebtMaturityDate.ToShortDateString()</li>
                        </ul>
                                              
                    </div>
                }
            </div>
        </div>
    </div>
}
<hr />

<!-- Modal -->
<div class="modal fade" id="myModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel">
    <div class="modal-dialog" role="document">
        <div class="modal-content" style="width: 50%;">
            @using (Html.BeginForm("SearchProfile", "Profile", FormMethod.Post))
            {
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                    <h4 class="modal-title" id="myModalLabel">Profile filter</h4>
                </div>

                <div class="modal-body" style="height:170px">
                    <div class="form-group">
                        <div class="row">
                            <div class="col-md-6">
                                @Html.LabelFor(model => model.DepartureFilter, htmlAttributes: new { @class = "control-label" })
                                @Html.EditorFor(model => model.DepartureFilter, new { htmlAttributes = new { @class = "form-control uppercase", @maxlength = "4" } })
                                @Html.ValidationMessageFor(model => model.DepartureFilter, "", new { @class = "text-danger" })
                            </div>

                            <div class="col-md-6">
                                @Html.LabelFor(model => model.ArrivalFilter, htmlAttributes: new { @class = "control-label" })
                                @Html.EditorFor(model => model.ArrivalFilter, new { htmlAttributes = new { @class = "form-control uppercase", @maxlength = "4" } })
                                @Html.ValidationMessageFor(model => model.ArrivalFilter, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <br />
                        <div class="row">
                            <div class="col-md-12">
                                @Html.LabelFor(model => model.ModelDescriptionFilter, htmlAttributes: new { @class = "control-label" })
                                @Html.EditorFor(model => model.ModelDescriptionFilter, new { htmlAttributes = new { @class = "form-control uppercase", @maxlength = "20" } })
                                @Html.ValidationMessageFor(model => model.ModelDescriptionFilter, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                </div>

                <div class="modal-footer">
                    <span class="pull-left">@Html.ActionLink("Remove filter", "RemoveFilter")</span>
                    <button type="button" class="btn btn-default" data-dismiss="modal">Cancel</button>
                    <button type="submit" class="btn btn btn-info" value="SearchProfile">Apply</button>
                </div>
            }
        </div>
    </div>
</div>


<div class="modal" id="myModalChart" tabindex="-1" role="dialog" aria-labelledby="myModalLabel">
    <div class="modal-dialog" role="document">
        <div class="modal-content" style="width: 100%;">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                    <h4 class="modal-title" id="myModalLabel">Payment/Month Chart</h4>
                </div>
                <div class="modal-body" >
                    <div id="chart-content"></div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                </div>
        </div>
    </div>
</div>


<div class="modal" id="myModalRanking" tabindex="-1" role="dialog" aria-labelledby="myModalLabel">
    <div class="modal-dialog" role="document">
        <div class="modal-content" style="width: 100%;">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <h4 class="modal-title" id="myModalLabel">Airlines ranking</h4>
            </div>
            <div class="modal-body">
                <div id="ranking-content"></div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>


<script>
$("#avatar-1").fileinput({
    overwriteInitial: true,
    maxFileSize: 60,
    showClose: false,
    showCaption: true,
    browseOnZoneClick: true,
    showBrowse: false,
    preferIconicZoomPreview: false,
    browseLabel: '',
    removeLabel: '',
    browseIcon: '<i class="glyphicon glyphicon-folder-open"></i>',
    removeIcon: '<i class="glyphicon glyphicon-remove"></i>',
    removeTitle: 'Cancel or reset changes',
    elErrorContainer: '#kv-avatar-errors-1',
    msgErrorClass: 'alert alert-block alert-danger',

    defaultPreviewContent: '<img src="@if (@Model.Statistics != null) { @Model.Statistics.Logo }" alt="Your Avatar" style="width:140px;"><h6 class="text-muted">Click to select</h6>',
    layoutTemplates: { main2: '{preview} {remove} ' },
    language: 'eN',
    uploadUrl: '/Profile/Upload',
    allowedFileExtensions: ["jpg", "png", "gif"],
    maxFileCount: 1
    });


$('#buttonChart').click(function () {
    $.ajax({
        url: '@Url.Action("ChartProfile", "Profile")',
        type: "Get",
        data: '',
        success: function (result) {
            if (result != null) {
                $('#myModalChart').modal('show');
                $("#chart-content").html(result);
            }
        }
    });
    return true;
});

$('#buttonRanking').click(function () {
    $.ajax({
        url: '@Url.Action("RankingProfile", "Profile")',
        type: "Get",
        data: '',
        success: function (result) {
            if (result != null) {
                $('#myModalRanking').modal('show');
                $("#ranking-content").html(result);
            }
        }
    });
    return true;
});
</script>
