@using PagedList;

@using PagedList.Mvc;
@using FlightJobs.Models;

@model FlightJobs.Models.HomeViewModel

<div style="width:100%; ">
    @if (Model.Statistics != null)
    {
        <div style="font-size:small; color:#9d9d9d; position: absolute; padding-left:10px; top:90px  ">@Html.DisplayNameFor(model => model.Statistics.BankBalance): @Html.DisplayFor(model => model.Statistics.BankBalance)</div>
        <div style="font-size:small; color:#9d9d9d; position: absolute; padding-left:10px; top:105px ">@Html.DisplayNameFor(model => model.Statistics.PilotScore): @Html.DisplayFor(model => model.Statistics.PilotScore)</div>
    }
    <div style="font-family:'Lucida Console'; font-size:x-large; color:azure; position: absolute; padding-left:10px; padding-top:10px; ">Flight Jobs</div>
    <img src="~/Content/img/banner0001.jpg"  style="width:99.8%" />
</div>

<div class="jumbotron">
    <p class="lead">First active one job to do and after start your flight in FlightJobs Connector X-Plane plugin.</p>
    <div class="panel panel-default text-center">
        <p>
            <b>Your pedding jobs...</b>
        </p>
        <table class="table table-striped table-bordered table-hover">
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.Jobs.First().IsActivated)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Jobs.First().DepartureICAO)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Jobs.First().ArrivalICAO)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Jobs.First().Dist)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Jobs.First().Pax)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Jobs.First().Cargo)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Jobs.First().Payload)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Jobs.First().Pay)
                </th>
                <th></th>
            </tr>


            @foreach (var item in Model.Jobs)
            {
                var style = (item.IsActivated) ? "font-weight:bold" : "";

                <tr style="@style">
                    <td>
                        @Html.CheckBoxFor(modelItem => item.IsActivated, new { @disabled = "disabled" })
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.DepartureICAO, new { @class = "control-label col-md-6" })
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.ArrivalICAO)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Dist) NM
                    </td>
                    <td> @Html.DisplayFor(modelItem => item.Pax) </td>
                    <td> @Html.DisplayFor(modelItem => item.Cargo) Kg </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Payload) Kg
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Pay)
                    </td>
                    <td style="text-align:center;"><a data-toggle="confirmation" data-title="Remove Job?" href="Home/DeleteJob/@item.Id"><i class="glyphicon glyphicon-remove"></i></a></td>
                    <td>
                        @Html.ActionLink("Activate", "ActivateJob", new { jobId = item.Id })
                    </td>
                </tr>
            }

        </table>
    </div>
        @Html.PagedListPager(Model.Jobs, pageNumber => Url.Action("Index", new  { pageNumber }))

        <p>@Html.ActionLink("Add jobs", "Index", "SearchJobs", new object { }, new { @class = "btn btn-info  pull-right btn-md" })</p>
    </div>

